#include"bits/stdc++.h"
/*************************************************************
 
    Following is the Binary Tree node structure.

    class BinaryTreeNode 
    {
    public : 
        T data;
        BinaryTreeNode<T> *left;
        BinaryTreeNode<T> *right;

        BinaryTreeNode(T data) {
            this -> data = data;
            left = NULL;
            right = NULL;
        }
    };

*************************************************************/

vector<int> bottomView(BinaryTreeNode<int> * root){

    // Write your code here.
    if(!root) return {};
    map<int,int>mp;
    queue<pair<BinaryTreeNode<int> *,int>>q;
    q.push({root,0});
    mp[0]=root->data;
    while(!q.empty()){
        
        auto curr=q.front();
        auto child=curr.first;
        q.pop();
        int level=curr.second;
        mp[level]=child->data;
        if(child->left) q.push({child->left,level-1});
        if(child->right) q.push({child->right,level+1});
        
    }
    vector<int>ans;
    for(auto it:mp){
        ans.push_back(it.second);
    }
    return ans;
}
