/*************************************************************

    Following is the Binary Tree node structure

    class BinaryTreeNode
    {
    public :
        T data;
        BinaryTreeNode<T> *left;
        BinaryTreeNode<T> *right;

        BinaryTreeNode(T data) {
            this -> data = data;
            left = NULL;
            right = NULL;
        }
    };

*************************************************************/
#include"bits/stdc++.h"
vector<int> zigZagTraversal(BinaryTreeNode<int> *root)
{
    // Write your code here!
    queue<BinaryTreeNode<int> *>q;
    vector<int>ans;
    if(!root) return ans;
    q.push(root);
    bool b=0;
    while(!q.empty()){
        int s=q.size();
        vector<int>lel;
        while(s--){
            auto curr=q.front();
            q.pop();
            if(curr->left) q.push(curr->left);
            if(curr->right) q.push(curr->right);
            lel.push_back(curr->data);
        }
        if(b){
            for(int i=lel.size()-1;i>=0;i--) ans.push_back(lel[i]);
            
        }
        else{
            for(int i=0;i<lel.size();i++)
                ans.push_back(lel[i]);
        }
        b=!b;
    }
    
   return ans; 
    
}
