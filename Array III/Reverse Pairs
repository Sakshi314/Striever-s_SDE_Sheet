#include <bits/stdc++.h> 

int merge(int l,int r,int mid,vector<int> &arr){
    
    int tot=0;
    int j=mid+1;
    for(int i=l;i<=mid;i++){
        while(j<=r && arr[i]>2*arr[j]) j++;
        
        tot+=j-mid-1;
    }
    
    vector<int>temp;
    int left=l,right=mid+1;
    while(left<=mid && right<=r){
        
        if(arr[left]<=arr[right]){
            temp.push_back(arr[left]);
            left++;
        }
        else{
            temp.push_back(arr[right]);
            right++;
        }
        
    }
    
    while(left<=mid){
        temp.push_back(arr[left]);
        left++;
    }
    while(right<=r){
        temp.push_back(arr[right]);
        right++;
    }
    for(int i=l;i<=r;i++){
        arr[i]=temp[i-l];
    }
    return tot;
}

int mergeSort(int l,int r,vector<int> &arr){
    
    if(l>=r) return 0;
    int mid=(l+r)/2;
    int count=mergeSort(l,mid,arr);
    count+=mergeSort(mid+1,r,arr);
    count+=merge(l,r,mid,arr);
    return count;
    
}

int reversePairs(vector<int> &arr, int n){
	// Write your code here.
    return mergeSort(0,n-1,arr);
}
